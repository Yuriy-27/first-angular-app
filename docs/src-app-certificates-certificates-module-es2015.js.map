{"version":3,"sources":["./node_modules/ngx-bootstrap/carousel/fesm2015/ngx-bootstrap-carousel.js","./src/app/certificates/certificates.component.html","./src/app/certificates/certificates.component.scss","./src/app/certificates/certificates.component.ts","./src/app/certificates/certificates.module.ts","./src/app/shared/classes/certificate.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkH;AAC1D;AACT;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA,2BAA2B,8DAAU;AACrC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB,iEAAK;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,kYAAkY,eAAe,qIAAqI,wCAAwC;AAC9jB,aAAa;AACb;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,eAAe,OAAO,mDAAK,EAAE;AAC7B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,yDAAW,2BAA2B,GAAG,OAAO,mDAAK,EAAE;AAC5E,iBAAiB,OAAO,yDAAW,0BAA0B;A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","file":"src-app-certificates-certificates-module-es2015.js","sourcesContent":["import { Injectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselConfig {\n    constructor() {\n        /* Default interval of auto changing of slides */\n        this.interval = 5000;\n        /* Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /* Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /* Show carousel-indicators */\n        this.showIndicators = true;\n        /* Slides can be paused on focus */\n        this.pauseOnFocus = false;\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n            of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n    }\n}\nCarouselConfig.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n    /** @type {?} */\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) {\n            return l;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    const n = Math.ceil((array.length) / size);\n    /** @type {?} */\n    let i = 0;\n    while (i < n) {\n        /** @type {?} */\n        const chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\n        out.push(chunk);\n        i++;\n    }\n    return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n    UNKNOWN: 0,\n    NEXT: 1,\n    PREV: 2,\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n    /**\n     * @param {?} config\n     * @param {?} ngZone\n     */\n    constructor(config, ngZone) {\n        this.ngZone = ngZone;\n        /* If `true` - carousel indicators indicate slides chunks\n             works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n             of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n        /**\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n         */\n        this.activeSlideChange = new EventEmitter(false);\n        /**\n         * Will be emitted when active slides has been changed in multilist mode\n         */\n        this.slideRangeChange = new EventEmitter();\n        /* Index to start display slides from it */\n        this.startFromIndex = 0;\n        this._slides = new LinkedList();\n        this._currentVisibleSlidesIndex = 0;\n        this.destroyed = false;\n        this.getActive = (/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active);\n        this.makeSlidesConsistent = (/**\n         * @param {?} slides\n         * @return {?}\n         */\n        (slides) => {\n            slides.forEach((/**\n             * @param {?} slide\n             * @param {?} index\n             * @return {?}\n             */\n            (slide, index) => slide.item.order = index));\n        });\n        Object.assign(this, config);\n    }\n    /**\n     * Index of currently displayed slide(started for 0)\n     * @param {?} index\n     * @return {?}\n     */\n    set activeSlide(index) {\n        if (this.multilist) {\n            return;\n        }\n        if (this._slides.length && index !== this._currentActiveSlide) {\n            this._select(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get activeSlide() {\n        return this._currentActiveSlide;\n    }\n    /**\n     * Delay of item cycling in milliseconds. If false, carousel won't cycle\n     * automatically.\n     * @return {?}\n     */\n    get interval() {\n        return this._interval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval = value;\n        this.restartTimer();\n    }\n    /**\n     * @return {?}\n     */\n    get slides() {\n        return this._slides.toArray();\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.singleSlideOffset) {\n                this.indicatorsByChunk = false;\n            }\n            if (this.multilist) {\n                this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n                this.selectInitialSlides();\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param {?} slide\n     * @return {?}\n     */\n    addSlide(slide) {\n        this._slides.add(slide);\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n            slide.active = true;\n        }\n        if (!this.multilist && this._slides.length === 1) {\n            this._currentActiveSlide = undefined;\n            this.activeSlide = 0;\n            this.play();\n        }\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\n            this.play();\n        }\n    }\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param {?} slide\n     * @return {?}\n     */\n    removeSlide(slide) {\n        /** @type {?} */\n        const remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            /** @type {?} */\n            let nextSlideIndex = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._select(nextSlideIndex);\n            }), 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            /** @type {?} */\n            const currentSlideIndex = this.getCurrentSlideIndex();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // after removing, need to actualize index of current active slide\n                this._currentActiveSlide = currentSlideIndex;\n                this.activeSlideChange.emit(this._currentActiveSlide);\n            }), 0);\n        }\n    }\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlideFromInterval(force = false) {\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to next slide\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to previous slide\n     * @param {?=} force\n     * @return {?}\n     */\n    previousSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.PREV, force);\n    }\n    /**\n     * @return {?}\n     */\n    getFirstVisibleIndex() {\n        return this.slides.findIndex(this.getActive);\n    }\n    /**\n     * @return {?}\n     */\n    getLastVisibleIndex() {\n        return findLastIndex(this.slides, this.getActive);\n    }\n    /**\n     * @param {?} direction\n     * @param {?=} force\n     * @return {?}\n     */\n    move(direction, force = false) {\n        /** @type {?} */\n        const firstVisibleIndex = this.getFirstVisibleIndex();\n        /** @type {?} */\n        const lastVisibleIndex = this.getLastVisibleIndex();\n        if (this.noWrap) {\n            if (direction === Direction.NEXT &&\n                this.isLast(lastVisibleIndex) ||\n                direction === Direction.PREV &&\n                    firstVisibleIndex === 0) {\n                return;\n            }\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.findNextSlideIndex(direction, force);\n        }\n        else {\n            this.moveMultilist(direction);\n        }\n    }\n    /**\n     * Swith slides by enter, space and arrows keys\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    keydownPress(event) {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            this.nextSlide();\n            event.preventDefault();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            this.previousSlide();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            this.nextSlide();\n            return;\n        }\n    }\n    /**\n     * Play on mouse leave\n     * \\@internal\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * Play on mouse up\n     * \\@internal\n     * @return {?}\n     */\n    onMouseUp() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * When slides on focus autoplay is stopped(optional)\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusIn() {\n        if (this.pauseOnFocus) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * When slides out of focus autoplay is started\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusOut() {\n        this.play();\n    }\n    /**\n     * Rolling to specified slide\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlide(index) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n        }\n        else {\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n        }\n    }\n    /**\n     * Starts a auto changing of slides\n     * @return {?}\n     */\n    play() {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    }\n    /**\n     * Stops a auto changing of slides\n     * @return {?}\n     */\n    pause() {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * Finds and returns index of currently displayed slide\n     * @return {?}\n     */\n    getCurrentSlideIndex() {\n        return this._slides.findIndex(this.getActive);\n    }\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isLast(index) {\n        return index + 1 >= this._slides.length;\n    }\n    /**\n     * Defines, whether the specified index is first in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isFirst(index) {\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    indicatorsSlides() {\n        return this.slides.filter((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectInitialSlides() {\n        /** @type {?} */\n        const startIndex = this.startFromIndex <= this._slides.length\n            ? this.startFromIndex\n            : 0;\n        this.hideSlides();\n        if (this.singleSlideOffset) {\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\n                /** @type {?} */\n                const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n                this._slidesWithIndexes = [\n                    ...this._slidesWithIndexes,\n                    ...slidesToAppend\n                ]\n                    .slice(slidesToAppend.length)\n                    .slice(0, this.itemsPerSlide);\n            }\n            else {\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n            }\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n        }\n        else {\n            this.selectRangeByNestedIndex(startIndex);\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * Defines next slide index, depending of direction\n     * @private\n     * @param {?} direction\n     * @param {?} force\n     * @return {?}\n     */\n    findNextSlideIndex(direction, force) {\n        /** @type {?} */\n        let nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return undefined;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    mapSlidesAndIndexes() {\n        return this.slides\n            .slice()\n            .map((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => {\n            return {\n                index,\n                item: slide\n            };\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlideRange(index) {\n        if (this.isIndexInRange(index)) {\n            return;\n        }\n        this.hideSlides();\n        if (!this.singleSlideOffset) {\n            this.selectRangeByNestedIndex(index);\n        }\n        else {\n            /** @type {?} */\n            const startIndex = this.isIndexOnTheEdges(index)\n                ? index\n                : index - this.itemsPerSlide + 1;\n            /** @type {?} */\n            const endIndex = this.isIndexOnTheEdges(index)\n                ? index + this.itemsPerSlide\n                : index + 1;\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectRangeByNestedIndex(index) {\n        /** @type {?} */\n        const selectedRange = this._chunkedSlides\n            .map((/**\n         * @param {?} slidesList\n         * @param {?} i\n         * @return {?}\n         */\n        (slidesList, i) => {\n            return {\n                index: i,\n                list: slidesList\n            };\n        }))\n            .find((/**\n         * @param {?} slidesList\n         * @return {?}\n         */\n        (slidesList) => {\n            return slidesList.list.find((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.index === index)) !== undefined;\n        }));\n        this._currentVisibleSlidesIndex = selectedRange.index;\n        this._chunkedSlides[selectedRange.index].forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => {\n            slide.item.active = true;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexOnTheEdges(index) {\n        return (index + 1 - this.itemsPerSlide <= 0 ||\n            index + this.itemsPerSlide <= this._slides.length);\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexInRange(index) {\n        if (this.singleSlideOffset) {\n            /** @type {?} */\n            const visibleIndexes = this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n            return visibleIndexes.indexOf(index) >= 0;\n        }\n        return (index <= this.getLastVisibleIndex() &&\n            index >= this.getFirstVisibleIndex());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideSlides() {\n        this.slides.forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active = false));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListLast() {\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListFirst() {\n        return this._currentVisibleSlidesIndex === 0;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveSliderByOneItem(direction) {\n        /** @type {?} */\n        let firstVisibleIndex;\n        /** @type {?} */\n        let lastVisibleIndex;\n        /** @type {?} */\n        let indexToHide;\n        /** @type {?} */\n        let indexToShow;\n        if (this.noWrap) {\n            firstVisibleIndex = this.getFirstVisibleIndex();\n            lastVisibleIndex = this.getLastVisibleIndex();\n            indexToHide = direction === Direction.NEXT\n                ? firstVisibleIndex\n                : lastVisibleIndex;\n            indexToShow = direction !== Direction.NEXT\n                ? firstVisibleIndex - 1\n                : !this.isLast(lastVisibleIndex)\n                    ? lastVisibleIndex + 1 : 0;\n            this._slides.get(indexToHide).active = false;\n            this._slides.get(indexToShow).active = true;\n            /** @type {?} */\n            const slidesToReorder = this.mapSlidesAndIndexes().filter((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active));\n            this.makeSlidesConsistent(slidesToReorder);\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n        else {\n            /** @type {?} */\n            let displayedIndex;\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n            if (direction === Direction.NEXT) {\n                this._slidesWithIndexes.shift();\n                displayedIndex = this.isLast(lastVisibleIndex)\n                    ? 0\n                    : lastVisibleIndex + 1;\n                this._slidesWithIndexes.push({\n                    index: displayedIndex,\n                    item: this._slides.get(displayedIndex)\n                });\n            }\n            else {\n                this._slidesWithIndexes.pop();\n                displayedIndex = this.isFirst(firstVisibleIndex)\n                    ? this._slides.length - 1\n                    : firstVisibleIndex - 1;\n                this._slidesWithIndexes = [{\n                        index: displayedIndex,\n                        item: this._slides.get(displayedIndex)\n                    }, ...this._slidesWithIndexes];\n            }\n            this.hideSlides();\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index)));\n        }\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveMultilist(direction) {\n        if (this.singleSlideOffset) {\n            this.moveSliderByOneItem(direction);\n        }\n        else {\n            this.hideSlides();\n            if (this.noWrap) {\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\n                    ? this._currentVisibleSlidesIndex + 1\n                    : this._currentVisibleSlidesIndex - 1;\n            }\n            else {\n                if (direction === Direction.NEXT) {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n                        ? 0\n                        : this._currentVisibleSlidesIndex + 1;\n                }\n                else {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\n                        ? this._chunkedSlides.length - 1\n                        : this._currentVisibleSlidesIndex - 1;\n                }\n            }\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getVisibleIndexes() {\n        if (!this.singleSlideOffset) {\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\n                .map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n        else {\n            return this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n    }\n    /**\n     * Sets a slide, which specified through index, as active\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _select(index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        if (!this.multilist) {\n            /** @type {?} */\n            const currentSlide = this._slides.get(this._currentActiveSlide);\n            if (currentSlide) {\n                currentSlide.active = false;\n            }\n        }\n        /** @type {?} */\n        const nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    }\n    /**\n     * Starts loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    restartTimer() {\n        this.resetTimer();\n        /** @type {?} */\n        const interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return setInterval((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const nInterval = +this.interval;\n                    this.ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        if (this.isPlaying &&\n                            !isNaN(this.interval) &&\n                            nInterval > 0 &&\n                            this.slides.length) {\n                            this.nextSlideFromInterval();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }));\n                }), interval);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get multilist() {\n        return this.itemsPerSlide > 1;\n    }\n    /**\n     * Stops loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    resetTimer() {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    }\n}\nCarouselComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'carousel',\n                template: \"<div (mouseenter)=\\\"pause()\\\" (mouseleave)=\\\"onMouseLeave()\\\" (mouseup)=\\\"onMouseUp()\\\" class=\\\"carousel slide\\\" (keydown)=\\\"keydownPress($event)\\\" (focusin)=\\\"pauseFocusIn()\\\" (focusout)=\\\"pauseFocusOut()\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slidez of indicatorsSlides(); let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"></li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\"><ng-content></ng-content></div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\" [class.disabled]=\\\"activeSlide === 0 && noWrap\\\" (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n            }] }\n];\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [\n    { type: CarouselConfig },\n    { type: NgZone }\n];\nCarouselComponent.propDecorators = {\n    noWrap: [{ type: Input }],\n    noPause: [{ type: Input }],\n    showIndicators: [{ type: Input }],\n    pauseOnFocus: [{ type: Input }],\n    indicatorsByChunk: [{ type: Input }],\n    itemsPerSlide: [{ type: Input }],\n    singleSlideOffset: [{ type: Input }],\n    activeSlideChange: [{ type: Output }],\n    slideRangeChange: [{ type: Output }],\n    activeSlide: [{ type: Input }],\n    startFromIndex: [{ type: Input }],\n    interval: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n    /**\n     * @param {?} carousel\n     */\n    constructor(carousel) {\n        this.itemWidth = '100%';\n        this.order = 0;\n        /**\n         * Wraps element by appropriate CSS classes\n         */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /**\n     * Fires changes in container collection after adding a new slide instance\n     * @return {?}\n     */\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    }\n    /**\n     * Fires changes in container collection after removing of this slide instance\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n}\nSlideComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'slide',\n                template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    '[attr.aria-hidden]': '!active'\n                }\n            }] }\n];\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [\n    { type: CarouselComponent }\n];\nSlideComponent.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    itemWidth: [{ type: HostBinding, args: ['style.width',] }],\n    order: [{ type: HostBinding, args: ['style.order',] }],\n    addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CarouselModule, providers: [] };\n    }\n}\nCarouselModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [SlideComponent, CarouselComponent],\n                exports: [SlideComponent, CarouselComponent],\n                providers: [CarouselConfig]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\n//# sourceMappingURL=ngx-bootstrap-carousel.js.map\n","module.exports = \"<div class=\\\"container-fluid wrapper\\\">\\r\\n    <div class=\\\"main-container container d-flex justify-content-between\\\">\\r\\n        <div class=\\\"nav-panel col-2 d-flex flex-wrap\\\">\\r\\n            <div class=\\\"top col-12 d-flex justify-content-center align-items-center\\\">\\r\\n                <div class=\\\"arrow_up d-flex\\\" (click)=\\\"changeCertificate(-1)\\\" [ngClass]=\\\"{'d-none': currentCertificate === certificates[0],\\r\\n                                'd-flex': currentCertificate != certificates[0]}\\\">\\r\\n                    <i class=\\\"arrow fas fa-arrow-up\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"center col-12 d-flex flex-column justify-content-center align-items-center\\\">\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 1}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 2}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 3}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 4}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 5}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 6}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 7}\\\"></div>\\r\\n                <div class=\\\"circle\\\" [ngClass]=\\\"{'current': currentCertificate.id === 8}\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"bottom col-12 d-flex justify-content-center align-items-center\\\">\\r\\n                <div class=\\\"arrow d-flex\\\" (click)=\\\"changeCertificate(+1)\\\" [ngClass]=\\\"{'d-none': currentCertificate === certificates[certificates.length - 1],\\r\\n                                'd-flex': currentCertificate != certificates[certificates.length - 1]}\\\">\\r\\n                    <i class=\\\"arrow-up fas fa-arrow-down\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"certificates_content col-10 d-flex flex-wrap\\\">\\r\\n            <!-- <div class=\\\"certificates_title col-12 d-flex align-items-center\\\">\\r\\n                <h1>{{currentCertificate.title}}</h1>\\r\\n            </div> -->\\r\\n            <div class=\\\"certificates_img col-12\\\">\\r\\n                <ng-container [ngSwitch]=\\\"currentCertificate.id\\\">\\r\\n                    <div *ngSwitchCase=\\\"1\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"2\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"3\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"4\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"5\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"6\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"7\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                    <div *ngSwitchCase=\\\"8\\\">\\r\\n                        <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"test\\\">\\r\\n        <ng-container [ngSwitch]=\\\"currentCertificate.id\\\">\\r\\n            <div *ngSwitchCase=\\\"1\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"2\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"3\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"4\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"5\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"6\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"7\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"8\\\">\\r\\n                <img src=\\\"{{currentCertificate.image}}\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n        </ng-container>\\r\\n        \\r\\n    </div> -->\\r\\n\\r\\n</div>\"","module.exports = \".wrapper {\\n  height: calc(100vh - 5rem);\\n  background-color: #F8F8F8;\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n  overflow-y: auto;\\n}\\n.wrapper .main-container {\\n  padding: 0;\\n  height: 40rem;\\n  outline: 0.2rem solid #2C4A52;\\n  box-shadow: 0 0 1rem 0 #2C4A52;\\n}\\n.wrapper .main-container .nav-panel {\\n  padding: 0;\\n  height: 100%;\\n  background-color: #537072;\\n  border-right: 0.2rem solid #2C4A52;\\n}\\n.wrapper .main-container .nav-panel .top {\\n  height: 15%;\\n}\\n.wrapper .main-container .nav-panel .bottom {\\n  height: 15%;\\n}\\n.wrapper .main-container .nav-panel .arrow {\\n  padding: 0.9rem;\\n  text-align: center;\\n  width: 3rem;\\n  height: 3rem;\\n  border-radius: 50%;\\n  color: #f4ebdb;\\n  border: 2px solid #f4ebdb;\\n}\\n.wrapper .main-container .nav-panel .arrow:hover {\\n  cursor: pointer;\\n}\\n.wrapper .main-container .nav-panel .center {\\n  height: 70%;\\n}\\n.wrapper .main-container .nav-panel .center .circle {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  background-color: #f4ebdb;\\n  border-radius: 50%;\\n  margin: 0.3rem;\\n  -webkit-transition: all 0.5s;\\n  transition: all 0.5s;\\n}\\n.wrapper .main-container .nav-panel .center .current {\\n  width: 0.6rem;\\n  height: 1rem;\\n  border-radius: 50%;\\n}\\n.wrapper .main-container .certificates_content {\\n  padding: 0;\\n  height: 100%;\\n}\\n.wrapper .main-container .certificates_content .certificates_img {\\n  overflow-y: auto;\\n}\\n.wrapper .main-container .certificates_content .certificates_img img {\\n  width: 100%;\\n  height: 40rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2VydGlmaWNhdGVzL0Q6XFxJVFxcTXlfcHJvamVjdHNcXEZpcnN0IEFuZ3VsYXIgQXBwXFxteUZpcnN0QXBwL3NyY1xcYXBwXFxjZXJ0aWZpY2F0ZXNcXGNlcnRpZmljYXRlcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY2VydGlmaWNhdGVzL0Q6XFxJVFxcTXlfcHJvamVjdHNcXEZpcnN0IEFuZ3VsYXIgQXBwXFxteUZpcnN0QXBwL3NyY1xcYXNzZXRzXFxzdHlsZXNcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC9jZXJ0aWZpY2F0ZXMvY2VydGlmaWNhdGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsMEJBQUE7RUFDQSx5QkNlZ0I7RURkaEIsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGdCQUFBO0FFREY7QUZFRTtFQUNFLFVBQUE7RUFDQSxhQUFBO0VBQ0EsNkJBQUE7RUFDQSw4QkFBQTtBRUFKO0FGSUk7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUVBLHlCQ0phO0VES2Isa0NBQUE7QUVITjtBRklNO0VBQ0UsV0FBQTtBRUZSO0FGS007RUFDRSxXQUFBO0FFSFI7QUZNTTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQ2xCUTtFRG1CUix5QkFBQTtBRUpWO0FGS1U7RUFDRSxlQUFBO0FFSFo7QUZNTTtFQUNFLFdBQUE7QUVKUjtBRk1RO0VBQ0UsYUFBQTtFQUNBLGNBQUE7RUFDQSx5QkM5QlE7RUQrQlIsa0JBQUE7RUFDQSxjQUFBO0VBQ0EsNEJBQUE7RUFBQSxvQkFBQTtBRUpWO0FGTVE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FFSlY7QUZRSTtFQUNFLFVBQUE7RUFDQSxZQUFBO0FFTk47QUZRTTtFQUNFLGdCQUFBO0FFTlI7QUZPUTtFQUNFLFdBQUE7RUFDQSxhQUFBO0FFTFYiLCJmaWxlIjoic3JjL2FwcC9jZXJ0aWZpY2F0ZXMvY2VydGlmaWNhdGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uLy4uL2Fzc2V0cy9zdHlsZXMvdmFyaWFibGVzXCI7XHJcblxyXG4ud3JhcHBlciB7XHJcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gI3skaGVhZGVyLWhlaWdodH0pO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRhbGFiYXN0ZXItY29sb3I7XHJcbiAgcGFkZGluZy10b3A6IDFyZW07XHJcbiAgcGFkZGluZy1ib3R0b206IDFyZW07XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICAubWFpbi1jb250YWluZXIge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGhlaWdodDogNDByZW07XHJcbiAgICBvdXRsaW5lOiAuMnJlbSBzb2xpZCAkcGlja2xlZC1ibHVld29vZC1jb2xvcjtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxcmVtIDAgJHBpY2tsZWQtYmx1ZXdvb2QtY29sb3I7XHJcblxyXG4gICAgLy8gbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIC8vIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAubmF2LXBhbmVsIHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAvLyBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGN1dHR5LXNhcmstY29sb3I7XHJcbiAgICAgIGJvcmRlci1yaWdodDogLjJyZW0gc29saWQgJHBpY2tsZWQtYmx1ZXdvb2QtY29sb3I7XHJcbiAgICAgIC50b3Age1xyXG4gICAgICAgIGhlaWdodDogMTUlO1xyXG4gICAgICAgIC8vIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XHJcbiAgICAgIH1cclxuICAgICAgLmJvdHRvbSB7XHJcbiAgICAgICAgaGVpZ2h0OiAxNSU7XHJcbiAgICAgICAgLy8gb3V0bGluZTogMXB4IHNvbGlkIHJlZDtcclxuICAgICAgfVxyXG4gICAgICAuYXJyb3cge1xyXG4gICAgICAgICAgcGFkZGluZzogLjlyZW07XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICB3aWR0aDogM3JlbTtcclxuICAgICAgICAgIGhlaWdodDogM3JlbTtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgIGNvbG9yOiAkcGFyY2htZW50LWNvbG9yO1xyXG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHBhcmNobWVudC1jb2xvcjtcclxuICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAuY2VudGVyIHtcclxuICAgICAgICBoZWlnaHQ6IDcwJTtcclxuICAgICAgICAvLyBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xyXG4gICAgICAgIC5jaXJjbGUge1xyXG4gICAgICAgICAgd2lkdGg6IC40cmVtO1xyXG4gICAgICAgICAgaGVpZ2h0OiAuNHJlbTtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwYXJjaG1lbnQtY29sb3I7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICBtYXJnaW46IC4zcmVtO1xyXG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jdXJyZW50IHtcclxuICAgICAgICAgIHdpZHRoOiAuNnJlbTtcclxuICAgICAgICAgIGhlaWdodDogMXJlbTtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5jZXJ0aWZpY2F0ZXNfY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgLy8gb3V0bGluZTogMXB4IHNvbGlkIGJsdWU7XHJcbiAgICAgIC5jZXJ0aWZpY2F0ZXNfaW1nIHtcclxuICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIGhlaWdodDogNDByZW07XHJcbiAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIC5jZXJ0aWZpY2F0ZXNfdGl0bGUge1xyXG4gICAgLy8gICBoZWlnaHQ6IDE1JTtcclxuICAgIC8vICAgLy8gb3V0bGluZTogMXB4IHNvbGlkIHJlZDtcclxuICAgIC8vICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJGN1dHR5LXNhcmstY29sb3I7XHJcbiAgICAvLyAgIGNvbG9yOiAkcGFyY2htZW50LWNvbG9yO1xyXG4gICAgLy8gfVxyXG4gICAgXHJcbiAgfVxyXG59XHJcbiIsIiRmYS1mb250LXBhdGg6IFwibm9kZV9tb2R1bGVzL0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1mcmVlL3dlYmZvbnRzXCI7XHJcbiRmb250LWljb25zOiAnRm9udCBBd2Vzb21lIDUgRnJlZSc7XHJcblxyXG4vLyBjb2xvcnMgLSBwbGVhc2UgdXNlIGh0dHA6Ly9jaGlyLmFnL3Byb2plY3RzL25hbWUtdGhhdC1jb2xvci8gdG8gZ2V0IGNvbG9yIG5hbWVcclxuJG1pbmUtc2hhZnQtY29sb3I6ICMyNjI2MjY7XHJcbiR0dW5kb3JhLWNvbG9yOiAjNDc0NzQ3O1xyXG4kYWx0by1jb2xvcjogI0RERERERDtcclxuJHdoaXRlLWNvbG9yOiAjRkZGRkZGO1xyXG4kYmxhY2stY29sb3I6ICMwMDAwMDA7XHJcbiRtYWxpYnUtY29sb3I6ICM5MENBRjk7XHJcbiRjZXJ1bGVhbi1jb2xvcjogIzAwYTNlMTtcclxuJGJvdWxkZXItY29sb3I6ICM3ODc4Nzg7XHJcbiRtZXJjdXJ5LWNvbG9yOiAjRTNFM0UzO1xyXG5cclxuXHJcbiRwaWNrbGVkLWJsdWV3b29kLWNvbG9yOiAjMkM0QTUyO1xyXG4kY3V0dHktc2Fyay1jb2xvcjogIzUzNzA3MjtcclxuJG1hbnRsZS1jb2xvcjogIzhlOWI5NztcclxuJHBhcmNobWVudC1jb2xvcjogI2Y0ZWJkYjtcclxuJGFsYWJhc3Rlci1jb2xvcjogI0Y4RjhGODtcclxuXHJcbi8vZm9udCBzaXplc1xyXG4kZm9udC1zaXplLXNtOiAuNzByZW07XHJcbiRmb250LXNpemUtcmVndWxhcjogLjg3NXJlbTtcclxuJGZvbnQtc2l6ZS1tZDogMXJlbTtcclxuJGZvbnQtc2l6ZS1sZzogMS4xMjVyZW07XHJcbiRmb250LXNpemUteGw6IDEuMjVyZW07XHJcbiRmb250LXNpemUteHhsOiAxLjM3NXJlbTtcclxuJGZvbnQtc2l6ZS14eHhsOiAxLjVyZW07XHJcblxyXG5cclxuLy8gb3RoZXJzXHJcbiRoZWFkZXItaGVpZ2h0OiA1cmVtO1xyXG4kZm9vdGVyLWhlaWdodDogNnJlbTtcclxuJGxpbmUtaGVpZ2h0OiAuMnJlbTtcclxuXHJcbiIsIi53cmFwcGVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNXJlbSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGOEY4Rjg7XG4gIHBhZGRpbmctdG9wOiAxcmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cbi53cmFwcGVyIC5tYWluLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogNDByZW07XG4gIG91dGxpbmU6IDAuMnJlbSBzb2xpZCAjMkM0QTUyO1xuICBib3gtc2hhZG93OiAwIDAgMXJlbSAwICMyQzRBNTI7XG59XG4ud3JhcHBlciAubWFpbi1jb250YWluZXIgLm5hdi1wYW5lbCB7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUzNzA3MjtcbiAgYm9yZGVyLXJpZ2h0OiAwLjJyZW0gc29saWQgIzJDNEE1Mjtcbn1cbi53cmFwcGVyIC5tYWluLWNvbnRhaW5lciAubmF2LXBhbmVsIC50b3Age1xuICBoZWlnaHQ6IDE1JTtcbn1cbi53cmFwcGVyIC5tYWluLWNvbnRhaW5lciAubmF2LXBhbmVsIC5ib3R0b20ge1xuICBoZWlnaHQ6IDE1JTtcbn1cbi53cmFwcGVyIC5tYWluLWNvbnRhaW5lciAubmF2LXBhbmVsIC5hcnJvdyB7XG4gIHBhZGRpbmc6IDAuOXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogM3JlbTtcbiAgaGVpZ2h0OiAzcmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGNvbG9yOiAjZjRlYmRiO1xuICBib3JkZXI6IDJweCBzb2xpZCAjZjRlYmRiO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5uYXYtcGFuZWwgLmFycm93OmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5uYXYtcGFuZWwgLmNlbnRlciB7XG4gIGhlaWdodDogNzAlO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5uYXYtcGFuZWwgLmNlbnRlciAuY2lyY2xlIHtcbiAgd2lkdGg6IDAuNHJlbTtcbiAgaGVpZ2h0OiAwLjRyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGViZGI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luOiAwLjNyZW07XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5uYXYtcGFuZWwgLmNlbnRlciAuY3VycmVudCB7XG4gIHdpZHRoOiAwLjZyZW07XG4gIGhlaWdodDogMXJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5jZXJ0aWZpY2F0ZXNfY29udGVudCB7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMTAwJTtcbn1cbi53cmFwcGVyIC5tYWluLWNvbnRhaW5lciAuY2VydGlmaWNhdGVzX2NvbnRlbnQgLmNlcnRpZmljYXRlc19pbWcge1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuLndyYXBwZXIgLm1haW4tY29udGFpbmVyIC5jZXJ0aWZpY2F0ZXNfY29udGVudCAuY2VydGlmaWNhdGVzX2ltZyBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0MHJlbTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Certificate } from '../shared/classes/certificate';\r\n\r\n\r\n\r\nconst MyCertificate: Certificate[] = [\r\n  new Certificate (1, 'HTML5&CSS3 Starter', 'assets/images/Certificates/html&cssstarter.jpg'),\r\n  new Certificate (2, 'Javascript Essential', 'assets/images/Certificates/js-essential.jpg'),\r\n  new Certificate (3, 'Javascript Advanced', 'assets/images/Certificates/jsAdv.jpg'),\r\n  new Certificate (4, 'HTML5&CSS3 Advanced', 'assets/images/Certificates/html&cssAdv.jpg'),\r\n  new Certificate (5, 'Bootstrap 4', 'assets/images/Certificates/bootstrap4.jpg'),\r\n  new Certificate (6, 'Typescript Fundamentals', 'assets/images/Certificates/typescript.jpg'),\r\n  new Certificate (7, 'Angular Essential', 'assets/images/Certificates/angular.jpg'),\r\n  new Certificate (8, 'Frontend Developer Diploma', 'assets/images/Certificates/diploma.jpg')\r\n];\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-certificates',\r\n  templateUrl: './certificates.component.html',\r\n  styleUrls: ['./certificates.component.scss']\r\n})\r\nexport class CertificatesComponent implements OnInit {\r\n  certificates: Certificate [] = MyCertificate;\r\n  currentCertificate: Certificate;\r\n\r\n  constructor() {\r\n    this.currentCertificate = this.certificates[0];\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.certificates = this.certificatesService.getAll();\r\n  }\r\n\r\n  changeCertificate(param) {\r\n    const index = this.certificates.findIndex(step => step === this.currentCertificate);\r\n    if (this.currentCertificate != null && this.currentCertificate !== undefined) {\r\n      this.currentCertificate = this.certificates[index + param];\r\n    }\r\n    if (param === -1 && index === 0) {\r\n      this.currentCertificate = this.certificates[0];\r\n    }\r\n    if (param === +1 && index === this.certificates.length - 1) {\r\n      this.currentCertificate = this.certificates[this.certificates.length - 1];\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CertificatesComponent } from './certificates.component';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: CertificatesComponent}\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [CertificatesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CarouselModule.forRoot(),\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class CertificatesModule { }\r\n","export class Certificate {\r\n    id: number;\r\n    image: string;\r\n    title: string;\r\n    constructor(certificateId: number, certificateTitle: string, certificateImage: string) {\r\n        this.id = certificateId;\r\n        this.title = certificateTitle;\r\n        this.image = certificateImage;\r\n    }\r\n}\r\n"],"sourceRoot":""}